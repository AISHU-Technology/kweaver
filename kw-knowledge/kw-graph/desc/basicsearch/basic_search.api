syntax = "v1"

info(
	title: "EngineServer服务"
	desc: "引擎核心服务"
	author: "Ervin.gong"
	email: "Ervin.gong@aishu.cn"
	version: "v1"
)

// 类的属性筛选条件
type ClassFilterProperties {
	Name      string `json:"name"`
	Operation string `json:"operation"`
	OpValue   string `json:"op_value"`
}

// 筛选规则
type SearchConfig {
	Tag        string                   `json:"tag"`
	Properties []*ClassFilterProperties `json:"properties,optional"`
}

// 属性信息结构
type Props {
	Name     string `json:"name"`
	Value    string `json:"value"`
	Alias    string `json:"alias"`
	PropType string `json:"type"`
}

// 点的tag信息，包含属性列表信息
type Properties {
	Tag   string   `json:"tag"`
	Props []*Props `json:"props"`
}

// 默认展示属性结构
type DefaultProperty {
	N string `json:"n"`
	V string `json:"v"`
	A string `json:"a"`
}

// 实体信息结构
type Vertex {
	ID              string           `json:"id"`
	Alias           string           `json:"alias,omitempty"`
	Tags            []string         `json:"tags"`
	Color           string           `json:"color"`
	Icon            string           `json:"icon"`
	DefaultProperty *DefaultProperty `json:"default_property"`
	Properties      []*Properties    `json:"properties"`
}

// 点结果集合，根据tag分类
type VertexResult {
	Tag      string    `json:"tag"`
	Alias    string    `json:"alias"`
	Color    string    `json:"color"`
	Icon     string    `json:"icon"`
	Vertices []*Vertex `json:"vertexs"`
}

// vids 搜索请求体
type VidsRequest {
	KgID         string          `path:"kg_id"`
	Page         int64           `json:"page,range=(0:]"`
	Size         int64           `json:"size,range=[0:]"`
	SearchConfig []*SearchConfig `json:"search_config, optional"`
	Vids         []string        `json:"vids"`
}

// tag集合结构
type VerticesResult {
	Count  int64           `json:"count"`
	Result []*VertexResult `json:"result"`
}

// 通用过滤条件
type Filter {
	EFilters []*EFilter `json:"e_filters,optional"`
	VFilters []*VFilter `json:"v_filters,optional"`
}

type EFilter {
	Relation        string            `json:"relation"`
	Type            string            `json:"type"`
	EdgeClass       string            `json:"edge_class"`
	PropertyFilters []*PropertyFilter `json:"property_filters,optional"`
	//direction string
	//Rank int64
}

type VFilter {
	Relation        string            `json:"relation"`
	Type            string            `json:"type"`
	Tag             string            `json:"tag"`
	PropertyFilters []*PropertyFilter `json:"property_filters,optional"`
}

type PropertyFilter {
	Name      string `json:"name"`
	Operation string `json:"operation"`
	OpValue   string `json:"op_value"`
}

// 点搜索响应体
type VerticesResponse {
	Res *VerticesResult `json:"res"`
}

// 全文检索请求体
type FullTextRequest {
	KgID         string          `path:"kg_id"`
	MatchingRule string          `json:"matching_rule,options=[completeness,portion]"`
	MatchingNum  int64           `json:"matching_num,range=(0:]"`
	Query        string          `json:"query"`
	Page         int64           `json:"page,range=(0:]"`
	Size         int64           `json:"size,range=[0:]"`
	SearchConfig []*SearchConfig `json:"search_config, optional"`
}

//边搜索请求体
type EdgesRequest {
	KgID  string     `path:"kg_id"`
	Edges []*EdgeReq `json:"edges, optional"`
	Eids  []string   `json:"eids, optional"`
}

type EdgeReq {
	SrcID string `json:"src_id"`
	DstID string `json:"dst_id"`
	Type  string `json:"type"`
	Rank  int64  `json:"rank, optional"`
}

//边搜索响应体
type EdgesResponse {
	ECount  int64        `json:"e_count"`
	EResult []*EdgeGroup `json:"e_result"`
}
type OldEdgeResponse {
	Res *EdgesResponse `json:"res"`
}

//边结果集合，根据type
type EdgeGroup {
	EdgeClass string  `json:"edge_class"`
	Edges     []*Edge `json:"edges"`
	Alias     string  `json:"alias"`
	Color     string  `json:"color"`
}

//通用边内容
type Edge {
	ID         string   `json:"id"`
	EdgeClass  string   `json:"edge_class"`
	SrcID      string   `json:"src_id"`
	DstID      string   `json:"dst_id"`
	Rank       int64    `json:"rank, optional"`
	Properties []*Props `json:"properties"`
}
// ----------------------------------------------------
// 以下结构声明为与前端约定的统一返回结构
// 属性结构
type UnitiveProps {
	// 属性名
	Key string `json:"name"`
	// 属性值
	Value string `json:"value"`
	// 显示名
	Alias string `json:"alias"`
	// 属性类型
	Type string `json:"type"`
	// 默认为false
	Disabled bool `json:"disabled"`
	// 是否为默认显示属性
	Checked bool `json:"checked"`
}

// 默认显示属性
type UnitiveDefaultProperty {
	// 属性名
	Name string `json:"name"`
	// 属性值
	Value string `json:"value"`
	// 属性显示名
	Alias string `json:"alias"`
}

// tag 信息
type UnitiveProperties {
	Tag   string          `json:"tag"`
	Props []*UnitiveProps `json:"props"`
}

// 实体信息
type Nodes {
	// 唯一标识id
	ID string `json:"id"`
	// 显示名
	Alias string `json:"alias"`
	// 颜色
	Color string `json:"color"`
	// 实体类型
	ClassName string `json:"class_name"`
	// 图标
	Icon string `json:"icon"`
	// 默认显示属性
	DefaultProperty *UnitiveDefaultProperty `json:"default_property"`
	// 唯一标识id集合
	Tags []string `json:"tags"`
	// 属性列表
	Properties []*UnitiveProperties `json:"properties"`
	// 排序用，记录nebula结果返回的原始顺序，不返回
	Number int `json:"-"`
}

// 关系信息
type Edges {
	// 唯一标识id
	ID string `json:"id"`
	// 显示名
	Alias string `json:"alias"`
	// 颜色
	Color string `json:"color"`
	// 实体类型
	ClassName string `json:"class_name"`
	// 起始点id
	Source string `json:"source"`
	// 目的点id
	Target string `json:"target"`
	// 属性列表
	Properties []*UnitiveProps `json:"properties"`
	// 排序用，记录nebula结果返回的原始顺序，不返回
	Number int `json:"-"`
}

type UnitiveVerticesList {
	ID string `json:"id"`
}

type UnitiveEdgesList {
	// 唯一标识id
	ID string `json:"id"`
	// 实体类型
	ClassName string `json:"class_name,omitempty"`
	// 起始点id
	Source string `json:"source,omitempty"`
	// 目的点id
	Target string `json:"target,omitempty"`
}

type PathsList {
	Nodes []*UnitiveVerticesList `json:"nodes"`
	Edges []*UnitiveEdgesList    `json:"edges"`
}

type ErrDetails {
	Detail string `json:"detail"`
}

// Error 结构
type Error {
	ErrorCode    string        `json:"ErrorCode"`
	Description  string        `json:"Description"`
	Solution     string        `json:"Solution"`
	ErrorDetails []*ErrDetails `json:"ErrorDetails"`
}

// TextRowInfo 文本解析列表行信息
type TextRowInfo {
	Column string `json:"column"`
	Value  string `json:"value"`
	Type   string `json:"type"`
}

// 文本解析列表
type Texts {
	Columns []*TextRowInfo `json:"columns"`
}

// PathSimpleInfo 对于路径探索路径的简单信息
type PathSimpleInfo {
	Nodes []string `json:"nodes"`
	Edges []string `json:"edges"`
}

// 前端定制化返回结构体，nodes及edges字段必有，其余并级可根据功能自行添加
type GraphSearchResponse {
	NodesCount int64 `json:"nodes_count,omitempty"`
	EdgesCount int64 `json:"edges_count,omitempty"`

	// 前端点渲染结构渲染结构
	Nodes []*Nodes `json:"nodes"`
	// 前端边渲染结构
	Edges []*Edges `json:"edges"`
	//  路径集合
	Paths []*PathSimpleInfo `json:"paths,omitempty"`
	// 对于边或者路径中点的补充
	NodesDetail map[string]*Nodes `json:"nodes_detail,omitempty"`
	// 文本解析列表
	Texts []*Texts `json:"texts,omitempty"`
	// 自定义查询语句
	Statement string `json:"statement,omitempty"`
	// 自定义查询Error
	Error *Error `json:"error,omitempty"`
}

// 通用图查询响应体
type UnitiveResponse {
	Res *GraphSearchResponse `json:"res"`
}
