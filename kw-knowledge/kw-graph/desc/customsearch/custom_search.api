syntax = "v1"

info(
	title: "EngineServer服务"
	desc: "引擎核心服务"
	author: "Ervin.gong"
	email: "Ervin.gong@aishu.cn"
	version: "v1"
)

import(
	"../basicsearch/basic_search.api"
)
// 自定义查询请求体
type CustomSearchRequest {
	// 图谱id
	KgID string `path:"kg_id"`
	// 是否返回原始json结果
	GivenJson bool `json:"given_json,optional,default=false"`
	// 查询语句
	Statements []string `json:"statements"`
}

// 实体解析列表
type VerticesParsedList {
	Vid             string           `json:"vid"`
	Tags            []string         `json:"tags"`
	Color           string           `json:"color"`
	Alias           string           `json:"alias"`
	Icon            string           `json:"icon"`
	DefaultProperty *DefaultProperty `json:"default_property"`
	Properties      []*Properties    `json:"properties"`
}

// 关系解析列表
type EdgesParsedList {
	SrcID      string   `json:"src_id"`
	DstID      string   `json:"dst_id"`
	EdgeClass  string   `json:"edge_class"`
	EdgeId     string   `json:"edge_id"`
	Color      string   `json:"color"`
	Alias      string   `json:"alias"`
	Properties []*Props `json:"properties"`
}

// 路径解析列表
type PathsParsedList {
	Vertices      []*VerticesParsedList `json:"nodes"`
	Relationships []*EdgesParsedList    `json:"relationships"`
}

// 语句解析列表
type Data {
	VerticesParsedList []*VerticesParsedList `json:"vertices_parsed_list,omitempty"`
	EdgesParsedList    []*EdgesParsedList    `json:"edges_parsed_list,omitempty"`
	PathsParsedList    []*PathsParsedList    `json:"paths_parsed_list,omitempty"`
}

type CustomSearchResult {
	Statement string  `json:"statement"`
	Error     *Error  `json:"error"`
	Data      []*Data `json:"data"`
}

type CustomSearchOldResponse {
	Res []*CustomSearchResult `json:"res"`
}

type CustomSearchV1Response {
	Res []*GraphSearchResponse `json:"res"`
}

type OldOpenCustomSearchError {
	Message string `json:"message"`
	Code    int64  `json:"code"`
}

type OldOpenCustomSearchData {
	Meta []interface{} `json:"meta"`
	Row  []interface{} `json:"row"`
}

type OldOpenCustomSearchResult {
	Columns []string                  `json:"columns"`
	Data    []OldOpenCustomSearchData `json:"data"`
}

type OldOpenCustomSearchInfo {
	Results []OldOpenCustomSearchResult `json:"results"`
}

type OldOpenCustomSearchMuti {
	Data      interface{} `json:"data"`
	Statement string      `json:"statement"`
	Error     *Error      `json:"error"`
}

type OldOpenCustomSearchResponse {
	Res []OldOpenCustomSearchMuti `json:"res"`
}

type CustomSearchSvcInfo {
	Data      OldOpenCustomSearchInfo `json:"data"`
	Statement string                  `json:"statement"`
}

type CustomSearchSvcResponse {
	Res CustomSearchSvcInfo `json:"res"`
}

type CustomSearchSvcRequest {
	ServiceID string `path:"service_id"`
}

type CustomSearchSvcByNameRequest {
	SvcName string `json:"service_name"`
}
