# Starter pipeline
#

trigger:
  branches:
    include:
      - develop
      - DATA-*
  paths:
    include:
      - /engine/alg-server/*
    exclude:
      - /engine/graph-engine/*
      - /builder/*
      - /sdk/*

pool:
  name: algServer

variables:
  - group: global-context
  - name: imageTag
    value: $(Build.SourceBranchName)-$(Build.BuildNumber)
  - name: imageName
    value: kw-alg-server
  - name: UTArtifactName
    value: coverageFiles
  - name: imageNameWithHarbor
    value: acr.aishu.cn/ad/kw-alg-server

resources:
  containers:
    - container: scanner
      endpoint: acr.aishu.cn
      image: ad/openjdk:11.0.13-jre
    - container: dotnet
      endpoint: acr.aishu.cn
      image: wing-biz/euop/dotnet-runtime:3.1

jobs:
  - job:
    displayName: build
    workspace:
      clean: all
    steps:
    - task: Docker@2
      displayName: buildImage
      inputs:
        command: 'build'
        repository: $(imageNameWithHarbor)
        tags: $(mainTag)
        Dockerfile: '**/Algserver.Dockerfile'
    - task: Bash@3
      displayName: saveTar
      inputs:
        targetType: 'inline'
        script: |
          docker save -o KWeaver-$(mainTag)-kw-algserver-$(imageTag).tar $(imageNameWithHarbor):$(mainTag)
    - task: FtpUpload@2
      displayName: uploadFtp
      inputs:
        credentialsOption: 'inputs'
        serverUrl: 'ftp://ftp-ad.aishu.cn'
        username: '$(ftpUser)'
        password: '$(ftpPasswd)'
        rootDirectory:
        filePatterns: '**/KWeaver-$(mainTag)-kw-algserver-$(imageTag).tar'
        remoteDirectory: '/packages/$(imageName)/$(Build.SourceBranchName)'
        clean: false
        cleanContents: false
        preservePaths: false
        trustSSL: false
