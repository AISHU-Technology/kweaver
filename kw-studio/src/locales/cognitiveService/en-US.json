{
  "cognitiveService": {
    "analysis": {
      "graphService": "Graph Analysis Apps",
      "create": "Create",
      "query": "Query Mode",
      "associated": "Associated Resources",
      "state": "State",
      "all": "all",
      "graphQuery": "graph language query",
      "allPathsQuery": "All Paths Query",
      "exploreAllPaths": "Explore all paths between two entities",
      "shortestPathQuery": "Shortest Path Query",
      "exploreTheShortestPath": "Explore the shortest path between two entities",
      "unpublished": "unpublished",
      "publishing": "publishing",
      "publishFailed": "published failed",
      "published": "published",
      "unPublishing": "unpublishing",
      "search": "Search for application name/ID",
      "serviceName": "Application Name",
      "description": "Description",
      "document": "Document Description",
      "creator": "Creator",
      "createdTime": "Created Time",
      "finalOperator": "Final Operator",
      "finalTime": "Final Operated Time",
      "operation": "Operation",
      "noService": "click |[Create]| button to add application",
      "noDescription": "[No description]",
      "view": "View",
      "details": "Details",
      "edit": "Edit",
      "test": "Test",
      "publish": "Publish",
      "unPublish": "Unpublish",
      "delete": "Delete",
      "deleteSuccess": "Success",
      "unPublishService": "Are you sure to unpublish the application?",
      "unPublishDes": "You need to re-publish it if you choose to unpublish it now. Please exercise caution when performing this operation!",
      "cancel": "Cancel",
      "ok": "OK",
      "known": "OK",
      "deleteService": "Are you sure to delete the application?",
      "retrieved": "Once the application is deleted, it cannot be retrieved. Please exercise caution when performing this operation!",
      "failedDelete": "Failed to delete it",
      "configured": "The current knowledge graph is configured with domain cognitive application, you need to delete all related application before you can delete it.",
      "noKnowledge": "No knowledge graph permission",
      "noPermission": "You currently do not have the permission of the knowledge graph",
      "tip": "Tip",
      "byName": "sort by name",
      "byUpdate": "sort by update time",
      "byCreate": "sort by creation time",
      "pcWebEmbed": "PC web embed",
      "noMoredata": "- All data loaded -",
      "statementError": "The statement does not meet the requirements",
      "authManagement": "Graph Analysis Application Permission Management",
      "changeKnwTitle": "Are you sure to switch the knowledge network?"
    },
    "restAPI": {
      "more": "more",
      "debug": "Debug",
      "cancel": "Cancel",
      "run": "Run and Refresh",
      "clear": "Clear",
      "reset": "Reset",
      "apiDoc": "API Documentation",
      "serviceId": "Application ID",
      "serviceName": "Application Name",
      "serviceDes": "Application Description",
      "acquire": "Get Header",
      "getDes": "Get APP ID interface Description",
      "keyDes": "APP key Description",
      "introduce": "AnyDAT AIntroduction Introduction",
      "authentication": "The use of KWeaver OpenAPI requires the authentication by the KWeaver system",
      "appId": "APP ID: The APPID of the KWeaver account obtained by the user logging into KWeaver via/rbac/v1/user/appId",
      "only": "for data scientists and developers when calling or using the KWeaver application;",
      "appKey": "APP Key: The verification string generated by the client using a specific algorithm through the three parameters of appid, timestamp and request parameters, which is used for the back-end to verify the legitimacy of the request.",
      "use": "Usage Examples",
      "keyDescription": "Description: The acceptance range of this timestamp is based on the system time of AD, and the acceptance time of the client is 30 minutes in the system limited time of AD, and the error time is 15 minutes",
      "generation": "APP Key Generation Algorithm",
      "example": "Example:",
      "doc": "APP Key Description",
      "appidDes": "KWeaver Unique ID of the account, which can be obtained through /rbac/v1/user/appId",
      "errorTip": "appid, timestamp, and appkey are empty. Click the upper button to obtain the appid",
      "appKeyDes": "The verification string generated by the client using a specific algorithm through the three parameters of appid, timestamp and request parameters, which is used for the back-end to verify the legitimacy of the request",
      "showMore": "View more",
      "productIntro": "Product Introduction",
      "documentMenu": "Document Catalog",
      "queryById": "Obtained by application ID",
      "queryByName": "Obtained by application name"
    },
    "iframeDocument": {
      "pCWebDescription": "PC Web Embed Description",
      "serviceID": "Application ID",
      "serviceName": "Application Name",
      "serviceDescription": "serviceDescription Description",
      "afterTheServicePublished": "After the application is published, the usage of graphs embedded in website is available.",
      "download": "Download",
      "reference": "Reference",
      "eventBindOrUnbind": "Event Bind/Unbind",
      "bindEventListeners": "Bind event listeners to the graph",
      "parameter": "Parameter:",
      "elementId": "Element ID",
      "nodeId": "Node ID",
      "name": "Name",
      "type": "Type",
      "requiredOrNot": "Required or not",
      "description": "Description",
      "eventNameSeeOptional": "Event name, see ",
      "eventNameSeeOptional2": "for optional event name",
      "listenForFunctions": "Listen for functions",
      "usage": "Usage:",
      "unbindEventListeners": "Unbind event listeners to the graph.",
      "getting": "Getting",
      "getDataAllNodes": "Get data of all nodes in the graph.",
      "returnValue": "Return value",
      "returnValueType:": "Return value type:",
      "getDataAllEdges": "Get data of all edges in the graph.",
      "queryCorrespondingBasedID. ": "Query  corresponding element data based on ID.",
      "ifElementThenReturnedOtherwiseUndefined": "If there is element data that matches the rule, then this element data is returned, otherwise undefined is returned.",
      "queryNodeDataBasedId": "Query node data of neighbors based on node ID.",
      "neighborTypeAllTypesNeighborsAreReturned": "Neighbor type, 'source' only gets the source node of the current node, 'target' only gets the target node pointed by the current node, all types of neighbors are returned if not specified",
      "nodeArrayMatchTheRequirements": "Node array whose returns match the requirements.",
      "elementActions": "Element Actions",
      "addNewElements": "Add new elements (nodes and edges).",
      "elementTypeOptionalValues": "Element type, optional values are 'node', 'edge'",
      "theDataModelOfTheElement": "The data model of the element, see element configuration items for details.",
      "deleteElements": "Delete elements.",
      "updateElementsIncludingUpdatingData": "Update elements, including updating data, styles, etc.",
      "theDataModelToBeUpdated": "The data model to be updated, see element configuration items for details",
      "viewportActions": "Viewport Actions",
      "scaleTheViewportWindowToRatio": "Scale the viewport window to a fixed ratio.",
      "fixedRatioValue": "Fixed ratio value.",
      "scalingIsCenteredOnTheXAndY": "Scaling is centered on the x and y coordinates of center, or on the current position of the element if the center parameter is omitted.",
      "makeTheCanvasContentsFitTheViewport.": "Make the canvas contents fit the viewport.",
      "[top, right, bottom, left] spacing values in four directions": "[top, right, bottom, left] spacing values in four directions",
      "rulesOfFitView": "Rules of fitView",
      "moveTheGraph": "Move the graph so that the item is aligned to the center of the viewport. This method can be used to do a jogging animation after searching.",
      "ifNotConfigured": "If or not animated. If not configured, it follows the animate parameter of graph.",
      "ifAnimatedYouCanConfigure": "If animated, you can configure the animation, see basic animation tutorial. If not configured, follow the animateCfg parameter of graph.",
      "basicEvents": "Basic Events",
      "eventName": "Event name",
      "triggeredBeforeLayout": "Triggered before layout",
      "triggeredAfterLayout": "Triggered after layout",
      "triggeredAndOpenedContextMenu": "Triggered and opened context menu when user right-clicks the mouse",
      "triggeredWhenTheMouseWheelIsScrolled": "The event is triggered when the mouse wheel is scrolled",
      "theEventTriggeredMouseWheelScrolled": "The event is triggered when the mouse wheel is scrolled",
      "theEventTriggeredWhenCanvasStartsDragged": "The event is triggered when the canvas starts to be dragged, this event acts on the dragged canvas",
      "theEventTriggeredWhenNodeBeingDragged": "The event is triggered when a node is being dragged, this event acts on the dragged node",
      "theEventTriggeredWhenNodeStartsDragged": "The event is triggered when a node starts to be dragged, this event acts on the dragged node",
      "theEventTriggeredWhenDraggingCompleted": "The event is triggered when the dragging is completed, this event acts on the node being dragged",
      "triggeredWhenLeftClicksNode": "Triggered when left-clicks a node, and will also trigger node:click twice",
      "triggeredWhenLeftClicksTheNode": "Triggered when left-clicks the node",
      "triggeredWhenMouseMovesInsideNode": "Constantly triggered when the mouse moves inside the node, but not triggered by the keyboard",
      "triggeredWhenMouseMovesOutsideNode": "Triggered when the mouse moves outside the node",
      "triggeredWhenLeftClicksEdge": "Triggered when left-clicks the edge",
      "triggeredWhenMouseMovesOnTheEdge": "Constantly triggered when the mouse moves on the edge, but not triggered by the keyboard",
      "triggeredWhenMouseMovesOutOfTheEdge": "Triggered when the mouse moves out of the edge",
      "addListeningEvent": "add listening event",
      "updateNodeData": "update node Data",
      "clickListenNodeBindings": "click Listen for all node bindings on the graph",
      "objectItemToBeOperatedOn": "the object item to be operated on",
      "specificObjectBeingOperatedOn": "the specific object being operated on",
      "listeningFunction": "listening function",
      "removeClickListeningEvent": "remove the click listening event above, noting that fn must be the same object",
      "queryNodeById": "query a node by id",
      "centerPointZoom3Times": "center point (100, 100) and zoom in 3 times",
      "zoomOutTo05": "zoom out to 0.5, centered on the current element position",
      "paddingIsUsed": "padding is used only to indicate top = right = bottom = left = 20",
      "beEquivalentTo1": "be equivalent to graph.fitView(20)",
      "paddingSetToAnArray": "padding is set to an array, passing only 2 values, so it is top = bottom = 20, right = left = 10",
      "paddingSetsThePseudoArray": "padding sets the pseudo-array, specifying all four directional values",
      "usingFitViewByRulesCustomizeRules": "using fitViewByRules, customize the rules",
      "animationMove": "animation move",
      "animateMoveConfigureTheAnimation": "animate the move and configure the animation",
      "type1": "Mode 1",
      "type2": "Mode 2",
      "getID": "Get APP ID",
      "getIDSuccess": "Get APP ID succeeded",
      "urlTitle": "URL Description",
      "urlExplain1": "When the application is accessed inline, if you want to query the result directly, you need to fill in the parameter value in the URL, the value is required at this time, the parameter should be connected with \"&\", and the parameter should be connected with \"$$\" if the parameter is multi-selected.",
      "urlExplain2": "the service is configured N-degree neighbor query of the entity, the entity and the depth are set two parameters respectively \"node\" and \"number\", node is a multi-select parameter, when the service is embedded, the user opens the service hoping to query the results directly, the URL is URL_ORIGIN&node=XXX$$XXX&number=3",
      "urlExplain3": "Note: The URL has a length limit and needs to follow the length specification of different browsers.",
      "paramTitle": "Parameter Description",
      "theUniqueID": "The unique ID of the graph analysis application is generated when it is created",
      "thName": "Name",
      "thType": "Type",
      "thRequired": "Required or not",
      "thDesc": "Description",
      "descText": "Application unique id, generated when creating the application",
      "appidExplain": "Get APPID interface description",
      "appidExplain1": "Description: APPID is a unique identifier for data scientists/developers to use or call KWeaver application. Get the APPID of KWeaver account by logging into KWeaver's user/appid. For details, see \"",
      "appidExplain2": "\"document",
      "neighborVids": "Fill in the vid of the starting entities for neighbor query",
      "neighborSteps": "Fill in the neighbors within a certain degree of relationship to be queried, only positive integers are allowed",
      "neighborDirection": "Fill in the direction of the relationship class from the starting point to the starting point neighbor, limited to three directions: positive, reverse, and bidirectional",
      "apply": "Apply",
      "urlEmbed": "You can embed the application through a URL",
      "example1": "Example 1: Set a parameter as A in the application configuration, and its parameter type is single",
      "example2": "Example 2: Set a parameter as A in the application configuration, and its parameter type is multiple",
      "snashotsList": "Getting Snapshot List",
      "snashotsExplain1": "When the application is accessed inline, you can select any snapshot ID as the default display ID.",
      "snashotsExplain2": "Note: If the applied snapshot ID is -1, the latest snapshot content will be displayed.",
      "snashotsExplain3": "1. Click [Getting Snapshot List] button below to get the snapshot list.",
      "snashotsExplain4": "2. When you choose to access the application inline, the snapshot content will be displayed by default. Click [Apply] button, the URL will be updated automatically. ",
      "snashotsOp": "Guidelines：",
      "serviceType": "Current application configuration query methods: customer search (graph language query), neighbors (neighbor query), full-path(all path query), shortest-path(shortest path query)",
      "snashotsId": "Snapshot id",
      "type2Explain": "You can use APIs for secondary development, leverage the functions of other services and apps, and integrate them into your own apps, providing users with richer functions and data access."
    },
    "neighbors": {
      "applyConfig": "Apply Config",
      "queryRules": "Query rules",
      "startPointType": "Starting entity class type",
      "startPoint": "Starting entity",
      "quickSearch": "Quick search",
      "today": "today",
      "lastWeek": "last weekend",
      "lasMonth": "end of last month",
      "firstOfWeek": "first day of last week",
      "firstOfMonth": "first day of last month",
      "endOfYear": "end of last year",
      "firstOfLastYear": "first day of last year",
      "endOfNextyear": "end of next year",
      "firstOfNextYear": "first day of next year",
      "constans": "constants",
      "customVar": "custom variables",
      "sysTimeVar": "system time variables",
      "timeVar": "time variables",
      "timeOffset": "time offset",
      "paramExample": "Parameter sample",
      "paramDesc": "Parameter description",
      "neighborExplain": "Take an entity as the starting point, and traverse in breadth its neighbors collection that are no more than K degree(s) away from each other",
      "notNull": "Cannot be empty",
      "addRules": "Add Search Rule",
      "searchEntity": "Search entities",
      "enterExample": "Please enter parameter sample",
      "enterDesc": "Please enter parameter description",
      "paramName": "Parameter",
      "selectSystem": "Please select a time variable",
      "enterOffset": "Please enter the time offset",
      "selectEntityType": "Please select entity class type"
    },
    "paths": {
      "selectPlace": "Please search/click the entity",
      "startTags": "Starting entity class type",
      "endTags": "End entity class type",
      "pathDepth": "Maximal Path Depth",
      "direction": "Path direction: The direction of the relationship class between the starting point and the endpoint",
      "pathDecisionDes": "Calculate Path Length By: path_depth(Path depth)、 weight_property(Weight attributes, edge classes can only be selected if they contain numerical type attributes)",
      "pathEdgesType": "Relationship type: when path_decision is weight_property required for property",
      "property": "Weight attributes: when path_decision is weight_property, it is mandatory and only one type can be selected.It is one of the relationship types in the field edges",
      "propertyValue": "Attribute default value: when path_decision is weight_property required for property,When the attribute value is empty, use the default attribute value to participate in path length calculation",
      "pathType": "Path type: 0(all path)、1(no loop)"
    }
  }
}
