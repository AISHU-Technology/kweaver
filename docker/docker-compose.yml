version: '3.8'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - "MYSQL_ROOT_PASSWORD=Kw1ea2ver!3"
      - "MYSQL_DATABASE=kweaver"
      - "TZ=Asia/Shanghai"
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/mysql/conf/my.cnf:/etc/mysql/my.cnf
      - ${DOCKER_VOLUME_DIRECTORY:-.}/mysql/data:/var/lib/mysql
    networks:
      - KWeaver-net

  redis:
    image: redis:7.0.4
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/redis/data:/data
      - ${DOCKER_VOLUME_DIRECTORY:-.}/redis/redis.conf:/etc/redis.conf
    command: redis-server /etc/redis.conf
    restart: always
    networks:
      - KWeaver-net

  mongo:
    image: mongo:4.0.27
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=Kw1ea2ver
      - TZ=Asia/Shanghai
    ports:
      - "27017:27017"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/mongodb/data:/data/db
      - ${DOCKER_VOLUME_DIRECTORY:-.}/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    command: mongod --dbpath /data/db --oplogSize 128 --auth
    restart: always
    networks:
      - KWeaver-net

  opensearch:
    image: opensearchproject/opensearch:2.12.0
    container_name: opensearch
    environment:
      - network.host=0.0.0.0
      - discovery.seed_hosts=opensearch
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node
      - discovery.type=single-node  #单机类型
      - TZ=Asia/Shanghai
      - bootstrap.memory_lock=true #避免es使用swap交换分区，频繁的交换，会导致IOPS变高
      - plugins.security.ssl.http.enabled=false
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=Kw1ea2ver!3 #账号admin
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/opensearch/data:/usr/share/opensearch/data
      - ${DOCKER_VOLUME_DIRECTORY:-.}/opensearch/plugins/analysis-hanlp:/usr/share/opensearch/plugins/analysis-hanlp
      - ${DOCKER_VOLUME_DIRECTORY:-.}/opensearch/config/analysis-hanlp:/usr/share/opensearch/config/analysis-hanlp
    healthcheck:
        test: [ "CMD-SHELL", "curl --silent --fail localhost:9200 || exit 1" ]
        interval: 30s
        timeout: 10s
        retries: 3
    restart: on-failure
    networks:
      - KWeaver-net

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.12.0
    container_name: opensearch-dashboards
    environment:
       - OPENSEARCH_HOSTS=http://opensearch:9200
#      - OPENSEARCH_HOSTS='["https://opensearch:9200"]' #集群配置
    ports:
      - "5601:5601"
    depends_on:
      - opensearch
    networks:
      - KWeaver-net

  nebula-metad:
    image: vesoft/nebula-metad:v3.6.0
    container_name: nebula-metad
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/nebula/nebula-metad:/nebula/nebula-metad
    command: --meta_server_addrs=nebula-metad:9559 --port=9559 --local_ip=nebula-metad --ws_ip=nebula-metad  --ws_http_port=19559 --data_path=/nebula/nebula-metad/data
    environment:
      - USER=root
      - TZ=Asia/Shanghai
    ports:
      - "9559:9559"
      - "19559:19559"
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://nebula-metad:19559/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    restart: on-failure
    networks:
      - KWeaver-net

  nebula-storaged:
    image: vesoft/nebula-storaged:v3.6.0
    container_name: nebula-storaged
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/nebula/nebula-storage:/nebula/nebula-storaged
    command: --meta_server_addrs=nebula-metad:9559 --local_ip=nebula-storaged --ws_ip=nebula-storaged --port=9779 --ws_http_port=19779 --data_path=/nebula/nebula-storaged/data
    environment:
      - USER=root
      - TZ=Asia/Shanghai
    ports:
      - "9779:9779"
      - "19779:19779"
    depends_on:
      - nebula-metad
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://nebula-storaged:19779/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: on-failure
    networks:
      - KWeaver-net

  nebula-graphd:
    image: vesoft/nebula-graphd:v3.6.0
    container_name: nebula-graphd
    environment:
      - USER=root
      - TZ=Asia/Shanghai
    command: --meta_server_addrs=nebula-metad:9559 --local_ip=nebula-graphd --port=9669 --ws_ip=nebula-graphd --ws_http_port=19669
    ports:
      - "9669:9669"
      - "19669:19669"
    depends_on:
      - nebula-storaged
    healthcheck:
      test: [ "CMD", "curl", "-sf", "http://nebula-graphd:19669/status" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: on-failure
    networks:
      - KWeaver-net

  nebula-console:
    image: vesoft/nebula-console:v3.6.0
    container_name: nebula-console
    entrypoint: ""
    command:
      - sh
      - -c
      - |
        for i in `seq 1 60`;do
          var=`nebula-console -addr nebula-graphd -port 9669 -u root -p Kw1ea2ver!3 -e 'ADD HOSTS "nebula-storaged":9779'`;
          if [[ $$? == 0 ]];then
            break;
          fi;
          sleep 1;
          echo "retry to add hosts.";
        done && tail -f /dev/null;
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      - nebula-graphd
    restart: on-failure
    networks:
      - KWeaver-net

  nebula-studio:
    image: vesoft/nebula-graph-studio:v3.9.0
    container_name: nebula-studio
    environment:
      USER: root
    ports:
      - "7001:7001"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/nebula/nebula-studio/data:/app/data
    networks:
      - KWeaver-net

  kw-builder:
    image: kweaverai/kw-builder:v0.2.0
    container_name: kw-builder
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/config/kw-builder/config.py:/app/config/config.py
    ports:
      - "6475:6475"
    expose:
      - '6475'
      - '6485'
      - '6488'
    environment:
      - TZ=Asia/Shanghai
      - CELERY_CONCURRENCY=4
      - DB_TYPE=mysql
      - GRAPHDB_HOST=nebula-graphd
      - GRAPHDB_PASSWORD=Kw1ea2ver!3
      - GRAPHDB_PORT=9669
      - GRAPHDB_READ_ONLY_PASSWORD=Kw1ea2ver!3
      - GRAPHDB_READ_ONLY_USER=kweaver
      - GRAPHDB_TYPE=nebulaGraph
      - GRAPHDB_USER=kweaver
      - MONGODBAUTHSOURCE=admin
      - MONGODBHOST=mongo
      - MONGODBPASS=Kw1ea2ver
      - MONGODBPORT=27017
      - MONGODBUSER=kweaver
      - MONGODBNAME=kweaver
      - OPENSEARCH_HOST=opensearch
      - OPENSEARCH_PASS=Kw1ea2ver!3
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USER=admin
      - RDSDBNAME=kweaver
      - RDSHOST=mysql
      - RDSPASS=Kw1ea2ver!3
      - RDSPORT=3306
      - RDSUSER=root
      - REDISCLUSTERMODE=master-slave
      - REDISHOST=redis
      - REDISPASS=
      - REDISPORT=6379
      - REDISREADHOST=redis
      - REDISREADPASS=
      - REDISREADPORT=6379
      - REDISREADUSER=
      - REDISUSER=
      - REDISWRITEHOST=redis
      - REDISWRITEPASS=
      - REDISWRITEPORT=6379
      - REDISWRITEUSER=
      - SENTINELMASTER=mymaster
      - SENTINELPASS=
      - SENTINELUSER=
      - VECTOR_URL=http://kw-models-m3e:9897/v1/embeddings #向量模型
    restart: always
    networks:
      - KWeaver-net
    depends_on:
      - "mysql"
      - "redis"
      - "opensearch"
      - "mongo"
      - "nebula-graphd"

  kw-models-factory:
    image: kweaverai/kw-models-factory:v0.2.0
    container_name: kw-models-factory
    ports:
      - "9898:9898"
    environment:
      - TZ=Asia/Shanghai
      - RDSDBNAME=kweaver
      - RDSHOST=mysql
      - RDSPASS=Kw1ea2ver!3
      - RDSPORT=3306
      - RDSUSER=root
    restart: always
    networks:
      - KWeaver-net
    depends_on:
      - "mysql"

  kw-graph:
    image: kweaverai/kw-graph:v0.2.0
    container_name: kw-graph
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/config/kw-graph/config.yaml:/app/kw-graph/etc/config.yaml
    ports:
      - "6480:6480"
    environment:
      - TZ=Asia/Shanghai
    command: /bin/sh -c "sleep 10 && /app/kw-graph/kw-graph"
    restart: always
    networks:
      - KWeaver-net
    depends_on:
      - "nebula-graphd"
      - "opensearch"
      - "mysql"
      - "redis"

  kw-system:
    image: kweaverai/kw-system:v0.2.0
    container_name: kw-system
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/config/kw-system/config-dev.yaml:/app/kw-system/etc/config-dev.yaml
    ports:
      - "8001:8001"
    environment:
      - TZ=Asia/Shanghai
    command: /bin/sh -c "sleep 5 && /app/kw-system/kw-system"
    restart: always
    networks:
      - KWeaver-net
    depends_on:
      - "mysql"
      - "redis"

  kw-studio:
    image: kweaverai/kw-studio:v0.2.0
    container_name: kw-studio
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${DOCKER_VOLUME_DIRECTORY:-.}/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "3001:3001"
    environment:
      - TZ=Asia/Shanghai
    restart: always
    networks:
      - KWeaver-net

#  kw-models-m3e:
#    image: kweaverai/kw-models-m3e:v0.2.0-arm64
#    container_name: kw-models-m3e
#    ports:
#      - "9897:9897"
#    environment:
#      - TZ=Asia/Shanghai
#    restart: always
#    networks:
#      - KWeaver-net

networks:
  KWeaver-net:
    driver: bridge