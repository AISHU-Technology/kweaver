// Code generated by MockGen. DO NOT EDIT.
// Source: kw-studio/http (interfaces: Swagger)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSwagger is a mock of Swagger interface.
type MockSwagger struct {
	ctrl     *gomock.Controller
	recorder *MockSwaggerMockRecorder
}

// MockSwaggerMockRecorder is the mock recorder for MockSwagger.
type MockSwaggerMockRecorder struct {
	mock *MockSwagger
}

// NewMockSwagger creates a new mock instance.
func NewMockSwagger(ctrl *gomock.Controller) *MockSwagger {
	mock := &MockSwagger{ctrl: ctrl}
	mock.recorder = &MockSwaggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSwagger) EXPECT() *MockSwaggerMockRecorder {
	return m.recorder
}

// GetSwaggerDoc mocks base method.
func (m *MockSwagger) GetSwaggerDoc(arg0 string) map[string]interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSwaggerDoc", arg0)
	ret0, _ := ret[0].(map[string]interface{})
	return ret0
}

// GetSwaggerDoc indicates an expected call of GetSwaggerDoc.
func (mr *MockSwaggerMockRecorder) GetSwaggerDoc(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSwaggerDoc", reflect.TypeOf((*MockSwagger)(nil).GetSwaggerDoc), arg0)
}
