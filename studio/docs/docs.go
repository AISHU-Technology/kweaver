// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/studio/v1/opensearch/list": {
            "get": {
                "description": "根据page和size获取存储记录及存储记录中的谱图",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "根据page和size获取存储记录及存储记录中的谱图",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "分页号",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "每页数量",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "记录名称",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "配置类型",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "排序字段",
                        "name": "orderField",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "排序顺序",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"total\": 10, \"data\": [{\"id\": 1, \"name\": \"test_nebula\", \"type\": \"nebula\", \"count\": 1, \"osName\": \"opensearch\", \"user\": \"root\", \"created\": 102223243, \"updated\": 1232343243}]}",
                        "schema": {
                            "$ref": "#/definitions/vo.ListVo"
                        }
                    },
                    "400": {
                        "description": "{\"ErrorCode\": \"Studio.Common.ParameterError\", \"Description\": \"Parameter error\", \"\"Solution\": \"\", \"ErrorDetails\": [], \"ErrorLink\": \"\"}"
                    },
                    "500": {
                        "description": "{\"ErrorCode\": \"Studio.GraphDB.GraphDBRecordNotFoundError\", \"Description\": \"Data source record does not exist\", \"\"Solution\": \"\", \"ErrorDetails\": [], \"ErrorLink\": \"\"}"
                    }
                }
            }
        }
    },
    "definitions": {
        "vo.ListVo": {
            "type": "object",
            "properties": {
                "data": {},
                "total": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
